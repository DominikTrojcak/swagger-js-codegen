/**
* {{&summary}}
* @method
{{#externalDocs}}
* @see {@link {{&url}}|{{#description}}{{&description}}{{/description}}{{^description}}External docs{{/description}}}
{{/externalDocs}}
* @name {{&className}}#{{&methodName}}
{{#parameters}}
    {{^isSingleton}} * @param {{=<% %>=}}{<%&type%>}<%={{ }}=%> {{&camelCaseName}} - {{&description}}{{/isSingleton}}
{{/parameters}}
*/
{{&methodName}}(
    {{#parameters}}
        {{#isPathParameter}}{{&camelCaseName}}{{&cardinality}}: {{> type}},{{/isPathParameter}}
    {{/parameters}}
    queryParameters: {
        {{#parameters}}
            {{#isQueryParameter}}
                {{^isSingleton}}
                    '{{&camelCaseName}}'{{&cardinality}}: {{> type}},
                {{/isSingleton}}
            {{/isQueryParameter}}
        {{/parameters}}
    } {{&defaultParam}},
    {{#hasBody}}
    body: 
        {{#parameters}}
            {{#isBodyParameter}}
                {{^isSingleton}}
                    {{> type}},
                {{/isSingleton}}
            {{/isBodyParameter}}
        {{/parameters}}
    {{/hasBody}}
): Promise<{{#successResponses}} {{> type}} {{^last}} | {{/last}} {{/successResponses}}>
{
    let path = '{{&path}}';
    let headers: any = {};
    let form: any = {};
{{#headers}}
    headers['{{&name}}'] = {{&value}};
{{/headers}}

{{#parameters}}

    {{#isPathParameter}}
        path = path.replace('{{=<% %>=}}{<%&name%>}<%={{ }}=%>', {{&camelCaseName}}.toString());
    {{/isPathParameter}}

    {{#isHeaderParameter}}
        {{#isSingleton}}
            headers['{{&name}}'] = '{{&singleton}}';
        {{/isSingleton}}
        {{^isSingleton}}
            if(parameters['{{&camelCaseName}}'] !== undefined) {
                headers['{{&name}}'] = parameters['{{&camelCaseName}}']!;
            }
        {{/isSingleton}}
    {{/isHeaderParameter}}

    {{#isFormParameter}}
        {{#isSingleton}}
            form['{{&name}}'] = '{{&singleton}}';
        {{/isSingleton}}
        {{^isSingleton}}
            if(parameters['{{&camelCaseName}}'] !== undefined) {
                form['{{&name}}'] = parameters['{{&camelCaseName}}'];
            }
        {{/isSingleton}}
    {{/isFormParameter}}

    {{#required}}
        {{^isSingleton}}
            {{#isQueryParameter}}
                if(queryParameters['{{&camelCaseName}}'] === undefined) {
                    throw new Error('Missing required {{&paramType}} parameter: {{&camelCaseName}}');
                }
            {{/isQueryParameter}}
        {{/isSingleton}}
    {{/required}}

{{/parameters}}

    {{^isBodyParameter}}
        {{#isPOST}}
            form = queryParameters;
            queryParameters = {};
        {{/isPOST}}
    {{/isBodyParameter}}

    return this.request(
        '{{method}}',
        `${this.baseUrl}${path}`,
        {{#hasBody}}body{{/hasBody}}{{^hasBody}}null{{/hasBody}},
        headers,
        queryParameters,
        form
    );
}
